name: Deploy
on:
  push:
    branches:
      - dev
      - main
  workflow_dispatch:
env:
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  PNPM_VERSION: 9.0.6

jobs:
  deploy-live:
    runs-on: ubuntu-latest
    name: Deploy to live
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

    steps:
        # https://github.com/actions/virtual-environments/issues/1187
        - name: tune linux network
          run: sudo ethtool -K eth0 tx off rx off

        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            ref: ${{ github.head_ref }}

        - name: Setup pnpm
          uses: pnpm/action-setup@v2
          with:
            version: ${{ env.PNPM_VERSION }}

        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version-file: .nvmrc
            cache: pnpm

        - name: Get pnpm store directory
          shell: bash
          run: |
            echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

        - uses: actions/cache@v3
          name: Setup pnpm cache
          with:
            path: ${{ env.STORE_PATH }}
            key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              ${{ runner.os }}-pnpm-store-

        - name: Cache turbo build setup
          uses: actions/cache@v4
          with:
            path: .turbo
            key: ${{ runner.os }}-turbo-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-turbo-
  
        - uses: pnpm/action-setup@v2
          name: Install pnpm
          with:
            version: ${{ env.PNPM_VERSION }}
            run_install: false

        - name: Install dependencies
          run: pnpm i

        - name: format:check
          run: pnpm format:check

        - name: lint
          run: pnpm lint

        - name: tsc
          run: pnpm tsc

        - name: Restore next build
          uses: actions/cache@v3
          id: restore-build-cache
          env:
            cache-name: cache-next-build
          with:
            # if you use a custom build directory, replace all instances of `.next` in this file with your build directory
            # ex: if your app builds to `dist`, replace `.next` with `dist`
            path: .next/cache
            # change this if you prefer a more strict cache
            key: ${{ runner.os }}-build-${{ env.cache-name }}

        - name: build
          run: pnpm build

        - name: Deploy live
          if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
          run: |
            vc -f --prod --token ${VERCEL_TOKEN}
          env:
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
            VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
